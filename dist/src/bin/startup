#!/bin/bash -e

source "$(dirname "$0")/common.sh"
cd "$APP_HOME"

NODETACH=0

while [[ $# -gt 0 ]]
do
  case "$1" in
    -nodetach)
      NODETACH=1
      ;;
    *)
      eecho "Unknown argument: $1"
      eecho "Usage: `basename $0` [-nodetach]"
      exit 10
      ;;
  esac
  shift
done

if [[ -f "$APP_PID_FILE" ]]; then
  PID="`cat "$APP_PID_FILE"`"
  if [[ ! "$PID" =~ (^[0-9]+$) ]]; then
    eecho "PID file exists, but it does not contain a PID; removing $APP_PID_FILE"
  fi
  if ps -p "$PID" >/dev/null 2>&1; then
    eecho "$APP_NAME started already with PID $PID; aborting."
    exit 100
  else
    eecho "PID file exists, but its process ($PID) does not exist; removing $APP_PID_FILE"
  fi
fi

rm -f "$APP_PID_FILE" >/dev/null 2>&1

mkdir -p `dirname $APP_STDOUT_FILE`
mkdir -p `dirname $APP_STDERR_FILE`

# Start the application up
set +e
eecho "Starting up $APP_NAME .."

nohup "$JAVA_HOME"/bin/java \
  ${JAVA_OPTS} \
  -classpath "$APP_HOME/conf:$APP_LIB_DIR/ext/*:$APP_LIB_DIR/*" \
  "$APP_MAIN" \
  -pidfile "$APP_PID_FILE" \
  $APP_OPTS \
  1> "$APP_STDOUT_FILE" \
  2> "$APP_STDERR_FILE" \
  &

COUNT=0
eecho -n "Waiting for PID file creation up to $APP_WAIT_TIME second(s) .."
while true; do
  if [[ -f "$APP_PID_FILE" ]]; then
    PID=$(cat "$APP_PID_FILE")
    kill -0 $PID > /dev/null 2>&1
    if [[ $? -eq 0 ]]; then
      eecho ' done'
      eecho "Started up $APP_NAME successfully: $PID"
      if [[ $NODETACH -eq 1 ]]; then
        trap "$APP_BIN_DIR/shutdown" SIGINT SIGTERM SIGKILL SIGHUP
        wait $PID
      fi
      exit 0
    fi
    eecho " invalid PID: $PID"
    break
  fi

  sleep 1
  ((COUNT++))
  eecho -n '.'

  if [[ $APP_WAIT_TIME -ne 0 ]] && [[ $COUNT -ge $APP_WAIT_TIME ]]; then
    eecho ' timed out'
    break
  fi
done

eecho "Failed to start up $APP_NAME"
exit 255
