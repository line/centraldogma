buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.craigburke.gradle:client-dependencies:${managedVersions['com.craigburke.gradle:client-dependencies']}"
    }
}

apply plugin: 'com.craigburke.client-dependencies'

dependencies {
    compile project(':common-legacy')

    // Armeria
    ['armeria-shaded', 'armeria-thrift0.9-shaded'].each {
        compile "com.linecorp.armeria:$it"
    }
    testCompile 'com.linecorp.armeria:armeria-testing-shaded'

    // JSch
    compile 'com.jcraft:jsch'

    // Commons Daemon
    compile 'commons-daemon:commons-daemon'

    // Curator & ZooKeeper
    compile 'org.apache.curator:curator-recipes'
    compile 'org.apache.zookeeper:zookeeper'
    testCompile 'org.apache.curator:curator-test'

    // jCommander
    compile 'com.beust:jcommander'

    // jGit
    compile 'org.eclipse.jgit:org.eclipse.jgit'

    // Quartz
    compile 'org.quartz-scheduler:quartz'

    // Mockito for mocking a Project
    jmh 'org.mockito:mockito-core'
    // Logging
    runtime('ch.qos.logback:logback-classic') {
        ext.optional = true
    }
}

clientDependencies {
    installDir = "${project.projectDir}/src/main/resources/webapp/vendor"
    copyExcludes = ['**/Gruntfile.js', 'gulpfile.js', 'source/**', 'test', 'karma.conf.js', 'index.js']
    npm {
        'ace-builds'('1.2.5', from: 'src-min-noconflict')
        'angular'('1.5.8')
        'angular-cache-buster'('0.4.3')
        'angular-cookies'('1.5.8')
        'angular-dynamic-locale'('0.1.32')
        'angular-i18n'('1.5.8')
        'angular-local-storage'('0.5.0')
        'angular-resource'('1.5.8')
        'angular-sanitize'('1.5.8')
        'angular-translate'('2.13.0', transitive: false)
        'angular-translate-loader-partial'('2.13.0')
        'angular-translate-storage-cookie'('2.13.0')
        'angular-ui-ace'('0.2.3', from: 'src')
        'angular-ui-bootstrap'('2.2.0')
        'angular-ui-notification'('0.2.0')
        'angular-ui-router'('0.3.2')
        'bootstrap'('3.3.7')
        'bootswatch'('3.3.7')
        'diff'('3.0.1')
        'fast-json-patch'('1.1.1')
        'jquery'('2.2.4')
        'json3'('3.3.2', from: 'lib')
        'moment'('2.16.0', from: 'min')
    }
}

task copyWebApp(type:Copy){
    dependsOn ':server-auth:webapp:buildWebApp'

    def dst = "${project.ext.genSrcDir}/main/resources/auth-webapp";

    from project(':server-auth:webapp').file('build')
    into dst

    doFirst {
        delete(dst)
    }
}

tasks.clean.dependsOn(tasks.clientClean)
tasks.processResources.dependsOn(tasks.clientInstall, tasks.copyWebApp)

