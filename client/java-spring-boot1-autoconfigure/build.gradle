final def SPRING_BOOT_VERSION = '1.5.22.RELEASE'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    api project(':client:java-armeria')
    api 'javax.validation:validation-api'
    api('org.springframework.boot:spring-boot-starter') {
        version {
            // Will fail the build if the override doesn't work
            strictly SPRING_BOOT_VERSION
        }
    }

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        version {
            // Will fail the build if the override doesn't work
            strictly SPRING_BOOT_VERSION
        }
    }
    testImplementation 'com.github.sbrannen:spring-test-junit5:1.5.0'
    testRuntimeOnly 'org.hibernate.validator:hibernate-validator'
}

// Use the sources from 'client-spring-boot-autoconfigure'.
// NB: We should not add these in the 'sourceSets' directive because that will make the directories mentioned
//     below are added to two projects and having a source directory with two output directories will confuse
//     the IDE.
def autoconfigureProjectDir = "${rootProject.projectDir}/client/java-spring-boot-autoconfigure"
tasks.compileJava.source "${autoconfigureProjectDir}/src/main/java"
tasks.processResources.from "${autoconfigureProjectDir}/src/main/resources"
tasks.compileTestJava.source "${autoconfigureProjectDir}/src/test/java", "${autoconfigureProjectDir}/gen-src/test/java"
tasks.processTestResources.from "${autoconfigureProjectDir}/src/test/resources"
tasks.sourcesJar.from "${autoconfigureProjectDir}/src/main/java"
tasks.sourcesJar.from "${autoconfigureProjectDir}/src/main/resources"
tasks.javadoc.source "${autoconfigureProjectDir}/src/main/java"

// Disable checkstyle because it's checked by 'client-spring-boot-autoconfigure'
tasks.withType(Checkstyle) {
    onlyIf { false }
}

// allows illegal access by cglib
if (rootProject.ext.testJavaVersion >= 16) {
    tasks.withType(Test) {
        jvmArgs '--add-opens=java.base/java.lang=ALL-UNNAMED'
    }
}
