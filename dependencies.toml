#
# NB: Update NOTICE.txt and add/remove LICENSE.*.txt when adding/removing a dependency.
#     If its classes are exposed in Javadoc, update offline links as well.
#
[versions]
armeria = "1.28.4"
assertj = "3.25.3"
awaitility = "4.2.1"
bouncycastle = "1.78.1"
caffeine = "2.9.3"
checkstyle = "10.3.3"
controlplane = "1.0.44"
curator = "5.6.0"
# Do not upgrade cron-utils until there's another CVE or Armeria's SLF4J and Logback are upgraded.
cron-utils = "9.2.0"
diffutils = "1.3.0"
docker = "9.4.0"
download = "5.6.0"
eddsa = "0.3.0"
findbugs = "3.0.2"
futures-completable = "0.3.6"
guava = "33.1.0-jre"
guava-failureaccess = "1.0.1"
hamcrest-library = "2.2"
hibernate-validator6 = "6.2.5.Final"
hibernate-validator8 = "8.0.1.Final"
jackson = "2.17.0"
javassist = "3.30.2-GA"
javax-annotation = "1.3.2"
javax-inject = "1"
javax-validation = "2.0.1.Final"
jcommander = "1.82"
jetty-alpn-api = "1.1.3.v20160715"
jetty-alpn-agent = "2.0.10"
jgit = "5.13.3.202401111512-r"
jgit6 = "6.9.0.202403050737-r"
junit4 = "4.13.2"
junit5 = "5.10.2"
jsch = "0.1.55"
json-path = "2.2.0"
json-unit = "2.38.0"
jmh-core = "1.37"
jmh-gradle-plugin = "0.7.2"
jxr = "0.2.1"
logback12 = { strictly = "1.2.13" }
logback14 = { strictly = "1.4.14" }
logback = "1.2.13"
micrometer = "1.12.4"
mina-sshd = "2.12.1"
mockito = "4.11.0"
nexus-publish-plugin = "2.0.0"
node-gradle-plugin = "7.0.2"
osdetector = "1.7.3"
proguard = "7.3.1"
quartz = "2.3.2"
shadow-gradle-plugin = "7.1.2"
shiro = "1.3.2"
slf4j1 = { strictly = "1.7.36" }
slf4j2 = { strictly = "2.0.7" }
# Ensure that we use the same Snappy version as what Curator depends on.
# See: https://github.com/apache/curator/blob/master/pom.xml
snappy = "1.1.10.4"
sphinx = "2.10.1"
spring-boot2 = "2.7.18"
spring-boot3 = "3.2.4"
spring-test-junit5 = "1.5.0"
testcontainers = "1.19.7"
thrift09 = { strictly = "0.9.3-1" }
zookeeper = "3.7.2"

[boms]
armeria = { module = "com.linecorp.armeria:armeria-bom", version.ref = "armeria" }
jackson = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "jackson" }
junit5 = { module = "org.junit:junit-bom", version.ref = "junit5" }

[libraries.armeria]
module = "com.linecorp.armeria:armeria"
javadocs = "https://www.javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/1.27.0/"
[libraries.armeria-grpc]
module = "com.linecorp.armeria:armeria-grpc"
[libraries.armeria-junit5]
module = "com.linecorp.armeria:armeria-junit5"
[libraries.armeria-saml]
module = "com.linecorp.armeria:armeria-saml"
[libraries.armeria-thrift09]
module = "com.linecorp.armeria:armeria-thrift0.9"
[libraries.armeria-xds]
module = "com.linecorp.armeria:armeria-xds"


[libraries.assertj]
module = "org.assertj:assertj-core"
version.ref = "assertj"

[libraries.awaitility]
module = "org.awaitility:awaitility"
version.ref = "awaitility"

[libraries.bouncycastle-bcpg]
module = "org.bouncycastle:bcpg-jdk18on"
version.ref = "bouncycastle"
[libraries.bouncycastle-bcpkix]
module = "org.bouncycastle:bcpkix-jdk18on"
version.ref = "bouncycastle"
[libraries.bouncycastle-bcprov]
module = "org.bouncycastle:bcprov-jdk18on"
version.ref = "bouncycastle"

# Don"t upgrade Caffeine to 3.x that requires Java 11.
[libraries.caffeine]
module = "com.github.ben-manes.caffeine:caffeine"
version.ref = "caffeine"
javadocs = "https://www.javadoc.io/doc/com.github.ben-manes.caffeine/caffeine/2.9.3/"

[libraries.checkstyle]
module = "com.puppycrawl.tools:checkstyle"
version.ref = "checkstyle"

[libraries.cron-utils]
module = "com.cronutils:cron-utils"
version.ref = "cron-utils"
relocations = { from = "com.cronutils", to = "com.linecorp.centraldogma.internal.shaded.cronutils" }

# Ensure that we use the same ZooKeeper version as what Curator depends on.
# See: https://github.com/apache/curator/blob/master/pom.xml
#      (Switch to the right tag to find out the right version.)
[libraries.curator-recipes]
module = "org.apache.curator:curator-recipes"
version.ref = "curator"
exclusions = "org.apache.zookeeper:zookeeper"
[libraries.curator-test]
module = "org.apache.curator:curator-test"
version.ref = "curator"
exclusions = "org.apache.zookeeper:zookeeper"

[libraries.diffutils]
module = "com.googlecode.java-diff-utils:diffutils"
version.ref = "diffutils"
relocations = { from = "difflib", to = "com.linecorp.centraldogma.internal.shaded.difflib" }

[libraries.eddsa]
module = "net.i2p.crypto:eddsa"
version.ref = "eddsa"

[libraries.findbugs]
module = "com.google.code.findbugs:jsr305"
version.ref = "findbugs"

[libraries.futures-completable]
module = "com.spotify:completable-futures"
version.ref = "futures-completable"
relocations = { from = "com.spotify.futures", to = "com.linecorp.centraldogma.internal.shaded.futures" }

[libraries.guava]
module = "com.google.guava:guava"
version.ref = "guava"
exclusions = "org.codehaus.mojo:animal-sniffer-annotations"
relocations = [
    { from = "com.google.common", to = "com.linecorp.centraldogma.internal.shaded.guava" },
    { from = "com.google.thirdparty.publicsuffix", to = "com.linecorp.centraldogma.internal.shaded.publicsuffix" }]
[libraries.guava-testlib]
module = "com.google.guava:guava-testlib"
version.ref = "guava"
exclusions = ["com.google.errorprone:error_prone_annotations", "com.google.j2objc:j2objc-annotations"]
relocations = { from = "com.google.common", to = "com.linecorp.centraldogma.internal.shaded.guava" }
# A transitive dependency of Guava which needs relocation as well.
[libraries.guava-failureaccess]
module = "com.google.guava:failureaccess"
version.ref = "guava-failureaccess"
exclusions = ["com.google.errorprone:error_prone_annotations", "com.google.j2objc:j2objc-annotations"]
relocations = { from = "com.google.common", to = "com.linecorp.centraldogma.internal.shaded.guava" }

[libraries.hamcrest-library]
module = "org.hamcrest:hamcrest-library"
version.ref = "hamcrest-library"

# Need to wait for spring boot 3 before upgrading to 7.x.x
[libraries.hibernate-validator6]
module = "org.hibernate.validator:hibernate-validator"
version.ref = "hibernate-validator6"
[libraries.hibernate-validator8]
module = "org.hibernate.validator:hibernate-validator"
version.ref = "hibernate-validator8"

[libraries.jackson-annotations]
module = "com.fasterxml.jackson.core:jackson-annotations"
javadocs = "https://fasterxml.github.io/jackson-annotations/javadoc/2.13/"
[libraries.jackson-core]
module = "com.fasterxml.jackson.core:jackson-core"
javadocs = "https://fasterxml.github.io/jackson-core/javadoc/2.13/"
[libraries.jackson-databind]
module = "com.fasterxml.jackson.core:jackson-databind"
javadocs = "https://fasterxml.github.io/jackson-databind/javadoc/2.13/"
[libraries.jackson-datatype-jsr310]
module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
# Only used for testing. See JacksonRequestConverterFunctionTest for more information.
[libraries.jackson-module-scala]
module = "com.fasterxml.jackson.module:jackson-module-scala_3"

[libraries.javassist]
module = "org.javassist:javassist"
version.ref = "javassist"

[libraries.javax-annotation]
module = "javax.annotation:javax.annotation-api"
version.ref = "javax-annotation"
[libraries.javax-inject]
module = "javax.inject:javax.inject"
version.ref = "javax-inject"
[libraries.javax-validation]
module = "javax.validation:validation-api"
version.ref = "javax-validation"

[libraries.jcommander]
module = "com.beust:jcommander"
version.ref = "jcommander"

[libraries.jetty-alpn-api]
module = "org.eclipse.jetty.alpn:alpn-api"
version.ref = "jetty-alpn-api"
[libraries.jetty-alpn-agent]
module = "org.mortbay.jetty.alpn:jetty-alpn-agent"
version.ref = "jetty-alpn-agent"

[libraries.jgit]
module = "org.eclipse.jgit:org.eclipse.jgit"
version.ref = "jgit"
[libraries.jgit-ssh-jsch]
module = "org.eclipse.jgit:org.eclipse.jgit.ssh.jsch"
version.ref = "jgit"

[libraries.jgit6]
module = "org.eclipse.jgit:org.eclipse.jgit"
version.ref = "jgit6"
[libraries.jgit-ssh-jsch6]
module = "org.eclipse.jgit:org.eclipse.jgit.ssh.jsch"
version.ref = "jgit6"

[libraries.jmh-core]
module = "org.openjdk.jmh:jmh-core"
version.ref = "jmh-core"

[libraries.jsch]
module = "com.jcraft:jsch"
version.ref = "jsch"

# Don't update `json-path` version
[libraries.json-path]
module = "com.jayway.jsonpath:json-path"
version.ref = "json-path"
relocations = { from = "com.jayway.jsonpath", to = "com.linecorp.centraldogma.internal.shaded.jsonpath" }

# 3.0.0 requires java 17
[libraries.json-unit]
module = "net.javacrumbs.json-unit:json-unit"
version.ref = "json-unit"
[libraries.json-unit-fluent]
module = "net.javacrumbs.json-unit:json-unit-fluent"
version.ref = "json-unit"

[libraries.junit4]
module = "junit:junit"
version.ref = "junit4"
javadocs = "https://junit.org/junit4/javadoc/4.13/"

[libraries.junit5-jupiter-api]
module = "org.junit.jupiter:junit-jupiter-api"
# ":site:javadoc" fails when we use a newer version of Javadoc.
javadocs = "https://junit.org/junit5/docs/5.5.2/api/"
[libraries.junit5-jupiter-params]
module = "org.junit.jupiter:junit-jupiter-params"
[libraries.junit5-jupiter-engine]
module = "org.junit.jupiter:junit-jupiter-engine"
[libraries.junit5-vintage-engine]
module = "org.junit.vintage:junit-vintage-engine"
[libraries.junit5-platform-commons]
module = "org.junit.platform:junit-platform-commons"
[libraries.junit5-platform-launcher]
module = "org.junit.platform:junit-platform-launcher"

[libraries.logback12]
module = "ch.qos.logback:logback-classic"
version.ref = "logback12"
javadocs = "https://www.javadoc.io/doc/ch.qos.logback/logback-classic/1.2.12/"
[libraries.logback14]
module = "ch.qos.logback:logback-classic"
version.ref = "logback14"
javadocs = "https://www.javadoc.io/doc/ch.qos.logback/logback-classic/1.4.11/"

[libraries.controlplane-cache]
module = "io.envoyproxy.controlplane:cache"
version.ref = "controlplane"
[libraries.controlplane-server]
module = "io.envoyproxy.controlplane:server"
version.ref = "controlplane"

[libraries.micrometer-core]
module = "io.micrometer:micrometer-core"
version.ref = "micrometer"
javadocs = "https://www.javadoc.io/doc/io.micrometer/micrometer-core/1.11.3/"
[libraries.micrometer-prometheus]
module = "io.micrometer:micrometer-registry-prometheus"
version.ref = "micrometer"
javadocs = "https://www.javadoc.io/doc/io.micrometer/micrometer-registry-prometheus/1.11.3/"

[libraries.mina-sshd-core]
module = "org.apache.sshd:sshd-core"
version.ref = "mina-sshd"
[libraries.mina-sshd-git]
module = "org.apache.sshd:sshd-git"
version.ref = "mina-sshd"

[libraries.mockito-core]
module = "org.mockito:mockito-core"
version.ref = "mockito"
[libraries.mockito-junit-jupiter]
module = "org.mockito:mockito-junit-jupiter"
version.ref = "mockito"

[libraries.proguard]
module = "com.guardsquare:proguard-gradle"
version.ref = "proguard"

[libraries.quartz]
module = "org.quartz-scheduler:quartz"
version.ref = "quartz"

[libraries.shadow-gradle-plugin]
module = "gradle.plugin.com.github.johnrengelman:shadow"
version.ref = "shadow-gradle-plugin"

# Don't update `shiro` version
[libraries.shiro-core]
module = "org.apache.shiro:shiro-core"
version.ref = "shiro"
javadocs = "https://shiro.apache.org/static/1.3.2/apidocs/"

[libraries.slf4j1-api]
module = "org.slf4j:slf4j-api"
version.ref = "slf4j1"
javadocs = "https://www.javadoc.io/doc/org.slf4j/slf4j-api/1.7.36/"
[libraries.slf4j1-jcl-over-slf4j]
module = "org.slf4j:jcl-over-slf4j"
version.ref = "slf4j1"
[libraries.slf4j1-jul-to-slf4j]
module = "org.slf4j:jul-to-slf4j"
version.ref = "slf4j1"
[libraries.slf4j1-log4j-over-slf4j]
module = "org.slf4j:log4j-over-slf4j"
version.ref = "slf4j1"

[libraries.slf4j2-api]
module = "org.slf4j:slf4j-api"
version.ref = "slf4j2"
javadocs = "https://www.javadoc.io/doc/org.slf4j/slf4j-api/2.0.7/"
[libraries.slf4j2-jcl-over-slf4j]
module = "org.slf4j:jcl-over-slf4j"
version.ref = "slf4j2"
[libraries.slf4j2-jul-to-slf4j]
module = "org.slf4j:jul-to-slf4j"
version.ref = "slf4j2"
[libraries.slf4j2-log4j-over-slf4j]
module = "org.slf4j:log4j-over-slf4j"
version.ref = "slf4j2"

[libraries.snappy]
module = "org.xerial.snappy:snappy-java"
version.ref = "snappy"

[libraries.spring-boot2-autoconfigure]
module = "org.springframework.boot:spring-boot-autoconfigure"
version.ref = "spring-boot2"
[libraries.spring-boot2-starter]
module = "org.springframework.boot:spring-boot-starter"
version.ref = "spring-boot2"
javadocs = "https://docs.spring.io/spring/docs/current/javadoc-api/"
[libraries.spring-boot2-starter-test]
module = "org.springframework.boot:spring-boot-starter-test"
version.ref = "spring-boot2"
[libraries.spring-boot2-configuration-processor]
module = "org.springframework.boot:spring-boot-configuration-processor"
version.ref = "spring-boot2"

[libraries.spring-boot3-autoconfigure]
module = "org.springframework.boot:spring-boot-autoconfigure"
version.ref = "spring-boot3"
[libraries.spring-boot3-starter]
module = "org.springframework.boot:spring-boot-starter"
version.ref = "spring-boot3"
javadocs = "https://docs.spring.io/spring/docs/current/javadoc-api/"
[libraries.spring-boot3-starter-test]
module = "org.springframework.boot:spring-boot-starter-test"
version.ref = "spring-boot3"
[libraries.spring-boot3-configuration-processor]
module = "org.springframework.boot:spring-boot-configuration-processor"
version.ref = "spring-boot3"

[libraries.spring-test-junit5]
module = "com.github.sbrannen:spring-test-junit5"
version.ref = "spring-test-junit5"

[libraries.testcontainers-junit-jupiter]
module = "org.testcontainers:junit-jupiter"
version.ref = "testcontainers"

[libraries.thrift09]
module = "org.apache.thrift:libthrift"
version.ref = "thrift09"

# Ensure that we use the same ZooKeeper version as what Curator depends on.
# See: https://github.com/apache/curator/blob/master/pom.xml
#      (Switch to the right tag to find out the right version.)
[libraries.zookeeper]
module = "org.apache.zookeeper:zookeeper"
version.ref = "zookeeper"
exclusions = [
    "io.netty:netty-all",
    "log4j:log4j",
    "org.apache.yetus:audience-annotations",
    "org.slf4j:slf4j-log4j12"]

[plugins]
docker = { id = "com.bmuschko.docker-remote-api", version.ref = "docker" }
download = { id = "de.undercouch.download", version.ref = "download" }
jmh = { id = "me.champeau.jmh", version.ref = "jmh-gradle-plugin" }
jxr = { id = "net.davidecavestro.gradle.jxr", version.ref = "jxr" }
nexus-publish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexus-publish-plugin" }
node-gradle = { id = "com.github.node-gradle.node", version.ref = "node-gradle-plugin" }
osdetector = { id = "com.google.osdetector", version.ref = "osdetector" }
sphinx = { id = "kr.motd.sphinx", version.ref = "sphinx" }
