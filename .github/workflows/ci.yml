name: CI
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    env:
      GRADLE_OPTS: -Xmx1280m
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        java: [11]
        include:
          - java: 11
            os: ubuntu-latest
            coverage: true
          - java: 8
            os: ubuntu-latest
            # TODO(ikhoon): Upgrade JDK version to 17
          - java: 14
            os: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: ${{ matrix.java }}

    - name: Restore Gradle Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/wrapper/dists
          ~/.gradle/caches/jars-3
          ~/.gradle/caches/modules-2
          ~/.gradle/caches/package-lists
          ~/.gradle/caches/sphinx-binary
          ~/.gradle/go/binary
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: |
        ./gradlew --no-daemon --stacktrace -Pcoverage -PnoLint build \
        -PbuildJdkVersion=${{ matrix.java }} \
        -PtestJavaVersion=${{ matrix.java }} \
      shell: bash

    - name: Cleanup Gradle Cache
      # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
      # Restoring these files from a GitHub Actions cache might cause problems for future builds.
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties
      shell: bash

    - name: Upload coverage to Codecov
      if: ${{ matrix.coverage }}
      uses: codecov/codecov-action@v1

    - name: Collecting the test reports ..
      if: failure()
      run: find . '(' -name 'hs_err_*.log' -or -path '*/build/reports/tests' ')' -exec tar rf "reports-JVM-${{ matrix.java }}.tar" {} ';'
      shell: bash

    - name: Upload Artifact
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: reports-JVM-${{ matrix.java }}
        path: reports-JVM-${{ matrix.java }}.tar
        retention-days: 3

    - name: Dump stuck threads
      if: always()
      run: jps | grep -vi "jps" | awk '{ print $1 }' | xargs -I'{}' jstack -l {} || true
      shell: bash

  lint:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    env:
      GRADLE_OPTS: -Xmx1280m
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        java: [14]
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}

      - name: Restore Gradle Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/wrapper/dists
            ~/.gradle/caches/jars-3
            ~/.gradle/caches/modules-2
            ~/.gradle/caches/package-lists
            ~/.gradle/caches/sphinx-binary
            ~/.gradle/go/binary
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: |
          ./gradlew --no-daemon --stacktrace lint \
          -PbuildJdkVersion=${{ matrix.java }} \
          -PtestJavaVersion=${{ matrix.java }}
        shell: bash

      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
        shell: bash
