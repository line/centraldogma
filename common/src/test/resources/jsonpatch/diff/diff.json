[
    {
        "message": "empty patch if no changes",
        "first": "hello",
        "second": "hello",
        "patch": []
    },
    {
        "message": "numeric values are treated as mathematically equal",
        "first": 1,
        "second": 1.0,
        "patch": []
    },
    {
        "message": "array members appended use special end-of-array pointer",
        "first": [ 1, 2, 3 ],
        "second": [ 1, 2, 3, 4, 5 ],
        "patch": [
            { "op": "add", "path": "/-", "value": 4 },
            { "op": "add", "path": "/-", "value": 5 }
        ]
    },
    {
        "message": "array members are correctly deleted",
        "first": [ 1, 2, 3 ],
        "second": [ 1 ],
        "patch": [
            { "op": "remove", "path": "/1" },
            { "op": "remove", "path": "/1" }
        ]
    },
    {
        "message": "single object member is deleted",
        "first": { "a": "b", "c": "d" },
        "second": { "a": "b" },
        "patch": [
            { "op": "remove", "path": "/c" }
        ]
    },
    {
        "message": "added object members are in natural order",
        "first": { "a": 1 },
        "second": { "a": 1, "c": 2, "b": 3, "d": 4 },
        "patch": [
            { "op": "add", "path": "/b", "value": 3 },
            { "op": "add", "path": "/c", "value": 2 },
            { "op": "add", "path": "/d", "value": 4 }
        ]
    },
    {
        "message": "single object value change is replaced",
        "first": { "a": null },
        "second": { "a": 6 },
        "patch": [
            { "op": "safeReplace", "path": "/a", "oldValue": null, "value": 6 }
        ]
    },
    {
        "message": "full value replacement is accounted for",
        "first": [ 1, 2, 3 ],
        "second": { "hello": "world" },
        "patch": [
            { "op": "safeReplace", "path": "", "oldValue": [ 1, 2, 3], "value": { "hello": "world" } }
        ]
    },
    {
        "message": "embedded object addition/replacement works",
        "first": {
            "a": "b",
            "c": {
                "d": "e"
            }
        },
        "second": {
            "a": "b",
            "c": {
                "d": 1,
                "e": "f"
            }
        },
        "patch": [
            { "op": "add", "path": "/c/e", "value": "f" },
            { "op": "safeReplace", "path": "/c/d", "oldValue": "e", "value": 1 }
        ]
    },
    {
        "message": "embedded array addition/replacement works",
        "first": {
            "a": [ 1, 2, 3 ]
        },
        "second": {
            "a": [ "b", 2, 3, 4 ]
        },
        "patch": [
            { "op": "safeReplace", "path": "/a/0", "oldValue": 1, "value": "b" },
            { "op": "add", "path": "/a/-", "value": 4 }
        ]
    },
    {
        "message": "embedded object addition/replacement works (#2)",
        "first": [ { "a": "b" }, "foo", { "bar": null } ],
        "second": [ { "a": "b", "c": "d" }, "foo", { "bar": "baz" } ],
        "patch": [
            { "op": "add", "path": "/0/c", "value": "d" },
            { "op": "safeReplace", "path": "/2/bar", "oldValue": null, "value": "baz" }
        ]
    },
    {
        "message": "embedded array addition/replacement works (#2)",
        "first": [ 1, [ 2, 3 ], 4 ],
        "second": [ "x", [ 2, 3, "y" ], 4 ],
        "patch": [
            { "op": "safeReplace", "path": "/0", "oldValue": 1, "value": "x" },
            { "op": "add", "path": "/1/-", "value": "y" }
        ]
    },
    {
        "message": "similar element is not copied if it's not a container",
        "first": {
            "a": "c"
        },
        "second": {
            "a": "c",
            "d": "c"
        },
        "patch": [
            { "op": "add", "path": "/d", "value": "c" }
        ]
    },
    {
        "message": "similar element is copied if it's a container",
        "first": {
            "a": [ "1", "2" ]
        },
        "second": {
            "a": [ "1", "2" ],
            "c": [ "1", "2" ]
        },
        "patch": [
            { "op": "copy", "path": "/c", "from": "/a" }
        ]
    }
]
