buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "net.sf.proguard:proguard-gradle:${managedVersions['net.sf.proguard:proguard-gradle']}"
    }
}

dependencies {
    // DiffUtils
    compile 'com.googlecode.java-diff-utils:diffutils'

    // Guava
    compile 'com.google.guava:guava'

    // Jackson
    [ 'core', 'annotations', 'databind' ].each {
        compile "com.fasterxml.jackson.core:jackson-$it"
    }

    // JSON-path
    compile 'com.jayway.jsonpath:json-path'

    // TestNG (for JSON patch tests)
    testCompile 'org.testng:testng'
}

// Run the JSON patch test cases.
task testNg(type: Test,
            group: 'Verification',
            description: 'Runs the TestNG unit tests.',
            dependsOn: tasks.shadedTestClasses) {

    useTestNG()
    include '/com/linecorp/centraldogma/internal/jsonpatch/**'

    scanForTestClasses = false
    testClassesDirs = tasks.shadedTest.testClassesDirs

    // Set the class path as late as possible so that the 'shadedTest' task has the correct classpath.
    afterProjectsWithFlag('java') {
        classpath = tasks.shadedTest.classpath
    }
}
tasks.shadedTest.finalizedBy tasks.testNg
tasks.check.dependsOn tasks.testNg

tasks.trimShadedJar.configure {
    keep "class !com.linecorp.centraldogma.internal.shaded.**,com.linecorp.centraldogma.** { *; }"
    keep "class com.linecorp.centraldogma.internal.shaded.caffeine.** { *; }" // To make the unsafe field access work.
    // Prevent ProGuard from removing all enum values from Option because otherwise it becomes a non-enum class.
    keep "class com.linecorp.centraldogma.internal.shaded.jsonpath.Option { *; }"
}
