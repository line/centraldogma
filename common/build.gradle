buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "net.sf.proguard:proguard-gradle:${managedVersions['net.sf.proguard:proguard-gradle']}"
    }
}

dependencies {
    // DiffUtils
    implementation 'com.googlecode.java-diff-utils:diffutils'

    // Jackson JSR310
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Guava
    implementation 'com.google.guava:guava'

    // Jackson
    [ 'core', 'annotations', 'databind' ].each {
        implementation "com.fasterxml.jackson.core:jackson-$it"
    }

    // JSON-path
    implementation 'com.jayway.jsonpath:json-path'
}

if (tasks.findByName('trimShadedJar')) {
    tasks.trimShadedJar.configure {
        keep "class !com.linecorp.centraldogma.internal.shaded.**,com.linecorp.centraldogma.** { *; }"
        // Do not optimize the dependencies that access some fields via sun.misc.Unsafe or reflection only.
        keep "class com.linecorp.centraldogma.internal.shaded.caffeine.** { *; }"
        // Prevent ProGuard from removing all enum values from Option because otherwise it becomes a non-enum class.
        keep "class com.linecorp.centraldogma.internal.shaded.jsonpath.Option { *; }"
    }
}
